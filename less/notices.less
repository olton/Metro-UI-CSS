/*
 * Metro UI CSS
 * (c) 2012-2013 by Sergey Pimenov
 * Licensed under the MIT License and Commercial
 *
 * Notices.less
 *
 */

.replies {
    //list-style: none;
    //margin: 0;
    //padding: 0;
    .unstyled;

    & > div, & > li, & > span {
        .medium-brick;
        #font > .normal;
        height: auto;
        min-height: 70px;
        padding: 10px;

        .avatar {
            width: 50px;
            height: 50px;
            overflow: hidden;
            display: table-cell;
            vertical-align:middle !important;
            background: #6e6e6e;
            box-shadow-bottom: inset 0px 0px 3px #fff;

            img {
                width: 100%;
                height: 100%;
                display:inline-block !important;
                vertical-align:middle !important;
            }
        }

        .reply {
            .MarginLeftOrRight("margin-left", 60px);
            margin-top: -50px;

            .date {
                .FloatItem("right");
                font-size: 55%;
                color: @white;
            }
            .author {
                color: @white;
            }
            .text {
                .tertiary-text;
                color: @white;
                line-height: 16px;
                &:hover {
                    color: @white;
                }
            }
        }

        .sticker {
            width: 0;
            height: 0;
            border-top: 10px solid @white;
            position: absolute;
            display: block;
            z-index: 1000;
        }

        .sticker.sticker-color-blue {border-color: @blue !important;}
        .sticker.sticker-color-blueLight {border-color: @blueLight !important;}
        .sticker.sticker-color-blueDark {border-color: @blueDark !important;}
        .sticker.sticker-color-green {border-color: @green !important;}
        .sticker.sticker-color-greenLight {border-color: @greenLight !important;}
        .sticker.sticker-color-greenDark {border-color: @greenDark !important;}
        .sticker.sticker-color-red {border-color: @red !important;}
        .sticker.sticker-color-yellow {border-color: @yellow !important;}
        .sticker.sticker-color-orange {border-color: @orange !important;}
        .sticker.sticker-color-orangeDark {border-color: @orangeDark !important;}
        .sticker.sticker-color-pink {border-color: @pink !important;}
        .sticker.sticker-color-pinkDark {border-color: @pinkDark !important;}
        .sticker.sticker-color-purple {border-color: @purple !important;}
        .sticker.sticker-color-darken {border-color: @darken !important;}
        .sticker.sticker-color-white {border-color: @white !important;}
        .sticker.sticker-color-lighten {border-color: @lighten !important;}
        .sticker.sticker-color-grayDark {border-color: @grayDark !important;}
        .sticker.sticker-color-magenta {border-color: @magenta !important;}
        .sticker.sticker-color-teal {border-color: @teal !important;}
        .sticker.sticker-color-redLight {border-color: @redLight !important;}

        .sticker.sticker-left {
            .BorderLeftOrRight("border-left", 20px, transparent, solid) !important;
            .DockItem("left", -20px);
        }

        .sticker.sticker-right {
            .BorderLeftOrRight("border-right", 20px, transparent, solid) !important;
            .DockItem("right", -20px);
        }
    }
}


.notices {
    list-style: none;
    margin: 0;
    padding: 0;

    & > div, & > li, & > span, & > a {
        //width: 385px;
        width: 100%;
        height: 90px;
        display: block;
        overflow: hidden;
        position: relative;
        margin-bottom: 10px;

        .notice-header, .header {
            position: relative;
            background: transparent;
            #font > .subheader-secondary;
            font-size: 12pt;
            margin-top: 5px;
            .MarginLeftOrRight("margin-left", 10px);
        }

        .notice-text, .text {
            position: relative;
            .MarginLeftOrRight("margin-right", 50px);
            .MarginLeftOrRight("margin-left", 10px);
            color: #fff;
            #font > .small;
            margin-top: -5px;
            line-height: 16px;
        }

        .notice-icon, .icon {
            position: absolute;
            .DockItem("right", 10px);
            bottom: 5px;

            img {
                width: 32px;
                height: 32px;
            }
        }

        .notice-image, .image {
            max-height: 48px;
            width: 48px;
            height: 48px;
            .SwapMargin(20px, 20px, 20px, 20px);
            .FloatItem("left");

            img {
                width: 48px;
                height: 48px;
            }
        }

        .close {
            z-index: 2;
            position: absolute;
            top: 5px;
            .DockItem("right", 10px);
            cursor: pointer;
            font-weight: bold;
            text-decoration: none;
            color: #fff !important;
        }
        .close::before {
            content: "\00d7";
            color: #fff !important;
        }

        .image-large {
            width: 88px;
            height: 88px;
            .SwapMargin(1px, 10px, 1px, 1px);
            overflow: hidden;
            .FloatItem("left");

            img {
                width: 88px;
                height: 88px;
            }
        }
    }
}
